#!/usr/bin/env bash

get_field() {
	awk -v field="$1" -F: '$1==field{gsub(/^[[:space:]]*|[[:space:]]*$/,"",$2);print $2}'
}

autotype() {
	local xkbmap="$(setxkbmap -print -verbose 10)"
	local layout="$(get_field 'layout' <<< "$xkbmap")"
	local variant="$(get_field 'variant' <<< "$xkbmap")"
	setxkbmap "$layout" "$variant" # NOTE: Fix for xdotool
	
	local instructions="$(pass show "$1" | get_field 'autotype')"
	readarray -d ' ' instructions <<< "${instructions:-:user Tab :pass}"
	for instr in "${instructions[@]}"; do
		if [ "$instr" == ':pass' ]; then
			xdotool type "$(pass show "$1" | head -n1)"
		elif [[ "$instr" =~ ^:.* ]]; then
			xdotool type "$(pass show "$1" | get_field "${instr#:}")"
		else
			xdotool key "$instr"
		fi
	done
}


PREFIX="${PASSWORD_STORE_DIR:-$HOME/.password-store}"
if [ ! -d "$PREFIX" ]; then
	rofi -markup -e "$(printf '<span size="larger" foreground="red"><tt>%s</tt> does not exist!</span>\nYou may need to initialize the password store with <tt>pass init</tt>. See <u>pass(1)</u> for usage.\nIf your store is elsewhere, you need to set the <tt>PASSWORD_STORE_DIR</tt> environment variable.' "$PREFIX")"
	exit
fi

readarray -d '' passwords < <(find "$PREFIX" -type f -name '*.gpg' -print0)
passwords=( "${passwords[@]#$PREFIX/}" )
passwords=( "${passwords[@]%.gpg}" )

selected="$(printf '%s' "${passwords[@]}" | rofi -dmenu -p 'pass' -mesg $'↵  Copy password\t\t⎇1 Autotype\n⎇* Edit')"
action=$?
[ -n "$selected" ] || exit
case $action in
	0) pass show -c "$selected";;
	10) autotype "$selected";;
	27) pass edit "$selected";;
	*) exit 1;;
esac
